swagger: '2.0'
info:
  title: Shop API
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
security:
  # enable OAuth protection for all REST endpoints
  # (only active if the TOKENINFO_URL environment variable is set)
  - oauth2: [uid]
paths:
  /shops:
    get:
      tags: [Shops]
      operationId: app.get_shops
      summary: Get all shops
      parameters:
        - name: shop_type
          in: query
          type: string
          pattern: "^[a-zA-Z0-9]*$"
        - name: limit
          in: query
          type: integer
          minimum: 0
          default: 100
      responses:
        200:
          description: Return shops
          schema:
            type: array
            items:
              $ref: '#/definitions/Shop'
  /shops/{shop_id}:
    get:
      tags: [Shops]
      operationId: app.get_shop
      summary: Get a single shop
      parameters:
        - $ref: '#/parameters/shop_id'
      responses:
        200:
          description: Return Shop
          schema:
            $ref: '#/definitions/Shop'
        404:
          description: Shop does not exist
    put:
      tags: [Shops]
      operationId: app.put_shop
      summary: Create or update a shop
      parameters:
        - $ref: '#/parameters/shop_id'
        - name: shop
          in: body
          schema:
            $ref: '#/definitions/Shop'
      responses:
        200:
          description: Shop updated
        201:
          description: New shop created
    delete:
      tags: [Shops]
      operationId: app.delete_shop
      summary: Remove a shop
      parameters:
        - $ref: '#/parameters/shop_id'
      responses:
        204:
          description: Shop was deleted
        404:
          description: Shop does not exist


parameters:
  shop_id:
    name: shop_id
    description: Shop's Unique identifier
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9-]+$"

definitions:
  Shop:
    type: object
    required:
      - name
      - shop_type
    properties:
      id:
        type: string
        description: Unique identifier
        example: "123"
        readOnly: true
      name:
        type: string
        description: Shop's name
        example: "Susie"
        minLength: 1
        maxLength: 100
      shop_type:
        type: string
        description: Kind of shop
        example: "Barber Shop"
        minLength: 1
      tags:
        type: object
        description: Custom tags
      created:
        type: string
        format: date-time
        description: Creation time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true


securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
